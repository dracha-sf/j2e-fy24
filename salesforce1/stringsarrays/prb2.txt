Problem 2:
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of
the i th line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.
Program:

public class prb2 {
    public static int maxArea(int[] a) {
        int n = a.length;
        int left = 0, right = n - 1;
        int max_area = 0;
        while (left < right) {
            int area = Math.min(a[left], a[right]) * (right - left);
            max_area = Math.max(max_area, area);
            if (a[left] < a[right]) {
                left++;
            } else {
                right--;
            }
        }
        return max_area;
    }
}
