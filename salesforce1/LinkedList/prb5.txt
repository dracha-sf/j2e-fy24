Problem 5:

Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the
original list. Return the linked list sorted as well.
Example 1:

Input: head = [1,2,3,3,4,4,5]Output: [1,2,5]
Example 2:
Input: head = [1,1,1,2,3]Output: [2,3]

Program:

public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode pre = null;
        ListNode cur = head;
        while(cur != null && cur.next != null){
            if(cur.val != cur.next.val){
                pre = cur;
                cur = cur.next;
            }else{
                while(cur.next != null && cur.next.val == cur.val){
                    cur = cur.next;
                }
                if(pre != null){
                    pre.next = cur.next;
                }else{
                    head = cur.next;
                }
                cur = cur.next;
            }
        }
        return head;
    }
}