PROGRAM 2

Find the number of unique paths in a n X m grid, starting from [0,0] to [n-1,m-1], where movement is only allowed
either 1 cell down or 1 cell right at a time.

Example 1:
Input: m = 3, n = 2
Output: 3
Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom
1. Right -> Down -> Down
2. Down -> Down -> Right
3. Down -> Right -> Down

Program:

import java.util.*;
public class prb2 {
    public static int paths(int n, int m) {
        int dp[][] = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (i == 0 || j == 0) {
                    dp[i][j] = 1;
                } else {
                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j];
                }
            }
        }
        return dp[n - 1][m - 1];
    }
}

