Problem -3

PROBLEM 3. GIVEN AN ARRAY ARR[] OF SIZE N AND AN INTEGER K. FIND THE MAXIMUM FOR EACH AND EVERY
CONTIGUOUS SUBARRAY OF SIZE K.

Example 1:
Input:
N = 9, K = 3
arr[] = 1 2 3 1 4 5 2 3 6
Output:
3 3 4 5 5 5 6
Explanation:
1st contiguous subarray = {1 2 3} Max = 3
2nd contiguous subarray = {2 3 1} Max = 3
3rd contiguous subarray = {3 1 4} Max = 4
4th contiguous subarray = {1 4 5} Max = 5
5th contiguous subarray = {4 5 2} Max = 5
6th contiguous subarray = {5 2 3} Max = 5
7th contiguous subarray = {2 3 6} Max = 6

Program:

package queuesstack;

class Solution
{
  static ArrayList <Integer> max_of_subarrays(int arr[], int n, int k)
    {
        int left=0;
        ArrayList<Integer>al=new ArrayList<>();
       for(int i=k-1; i<arr.length;i++)
       {
           int ans=returnMax(arr,left,i);
           al.add(ans);
           left++;
       }
       return al;
    }
  static int returnMax(int []arr,int startindex,int k)
  { 
    int max=Integer.MIN_VALUE;
      for(int i=startindex;i<=k;i++)
      {
          if(arr[i]>max)
              max=arr[i];
      }

    return max;
  }
}