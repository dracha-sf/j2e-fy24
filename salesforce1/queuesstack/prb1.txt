//Implementation of stack using two queues
/* 
PROBLEM 1. IMPLEMENT A STACK USING TWO QUEUES Q1 AND Q2.
Example 1:
Input:
push(2)
push(3)
pop()
push(4)
pop()

Output: 3 4

Explanation:
push(2) the stack will be {2}
push(3) the stack will be {2 3}
pop() poped element will be 3 the
stack will be {2}
push(4) the stack will be {2 4}
pop() poped element will be 4

Example 2:
Input:
push(2)
pop()
pop()
push(3)
Output: 2 -1

Your Task:
Expected Time Complexity: O(1) for push() and O(N) for pop() (or vice-versa).
Expected Auxiliary Space: O(1) for both push() and pop().
Constraints:
1 <= Number of queries <= 100
1 <= values of the stack <= 100
*/

package queuesstack;
import java.util.*;
public class prb1{
    static class Stack{
        static Queue<Integer>q1=new LinkedList<Integer>();
        static Queue<Integer>q2=new LinkedList<Integer>();
        static void push(int x){
            q2.add(x);
            while(!q1.isEmpty()){
                q2.add(q1.peek());
                q1.remove();
            }
            Queue<Integer>q=q1;
            q1=q2;
            q2=q;
        }
        static void pop(){
            if(q1.isEmpty()){
                return;
            }
            q1.remove();
        }
        static int top(){
            if(q1.isEmpty()){
                return -1;
            }
            return q1.peek();
        }
    }
}