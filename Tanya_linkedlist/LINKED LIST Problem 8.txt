Problem 8:
You are given two linked lists: list1 and list2 of sizes n and m respectively.
Remove list1's nodes from the a
th node to the b
th node, and put list2 in their place.
The blue edges and nodes in the following figure indicate the result:
Build the result list and return its head.


SOLUTION:
class ListNode {
    int val;
    ListNode next;

    ListNode(int val) {
        this.val = val;
    }
}

public class ReplaceNodesInLinkedList {
    public static ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode dummy = new ListNode(0);
        dummy.next = list1;
        ListNode prevA = dummy;
        ListNode nodeB = list1;
        ListNode nextB = list1;

       
        for (int i = 0; i < a; i++) {
            prevA = prevA.next;
        }
        for (int i = 0; i < b; i++) {
            nodeB = nodeB.next;
            nextB = nextB.next;
        }

        
        prevA.next = list2;

        
        ListNode lastNode = list2;
        while (lastNode.next != null) {
            lastNode = lastNode.next;
        }

       
        lastNode.next = nextB.next;

        return dummy.next;
    }

    public static void printList(ListNode head) {
        while (head != null) {
            System.out.print(head.val + " ");
            head = head.next;
        }
    }

    public static void main(String[] args) {
       
        ListNode list1 = new ListNode(1);
        list1.next = new ListNode(2);
        list1.next.next = new ListNode(3);
        list1.next.next.next = new ListNode(4);
        list1.next.next.next.next = new ListNode(5);

        ListNode list2 = new ListNode(10);
        list2.next = new ListNode(11);
        list2.next.next = new ListNode(12);

        ListNode result = mergeInBetween(list1, 2, 4, list2);

        printList(result);
    }
}