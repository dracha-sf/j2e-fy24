PROBLEM 9:
Different compression techniques are used in order to reduce the size of the messages sent over the web. An algorithm is
designed to compress a given string by describing the total number of consecutive occurrences of each character next to it.
Constraints:
i) message[i] ∈ ascii[a-z]
ii) |message| ≤ 10 to power 5

Solution:

public class StringCompression {
    public static void main(String[] args) {
        String message = "abaasass";
        String compressedMessage = compressString(message);
        System.out.println("Compressed message: " + compressedMessage);
    }

    public static String compressString(String message) {
        StringBuilder compressed = new StringBuilder();
        
        int count = 1;
        for (int i = 0; i < message.length(); i++) {
            // Check if the current character is the same as the next character
            if (i < message.length() - 1 && message.charAt(i) == message.charAt(i + 1)) {
                count++;
            } else {
                // Append the character and its count to the compressed string
                compressed.append(message.charAt(i));
                compressed.append(count);
                count = 1;
            }
        }
        
        return compressed.toString();
    }
}