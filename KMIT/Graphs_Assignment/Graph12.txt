class Solution {
    public int jump(int[] nums) {
        if (nums == null || nums.length <= 1) {
            return 0;
        }
        
        int n = nums.length;
        int currentMaxReach = nums[0];
        int nextMaxReach = nums[0];
        int minSteps = 1;
        
        for (int i = 1; i < n; i++) {
            if (i > currentMaxReach) {
                if (currentMaxReach == nextMaxReach) {
                    return -1;
                }
                
                currentMaxReach = nextMaxReach;
                minSteps++;
            }
            
            nextMaxReach = Math.max(nextMaxReach, i + nums[i]);
        }
        
        return minSteps;
    }
}
