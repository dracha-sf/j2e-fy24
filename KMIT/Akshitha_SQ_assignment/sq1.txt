import java.util.*;

class Solution{
	static class Stack {
		static Queue<Integer> q1 = new LinkedList<Integer>();
		static Queue<Integer> q2 = new LinkedList<Integer>();
		static int curr_size;
		static void push(int x)
		{
			q2.add(x);
			while (!q1.isEmpty()) {
				q2.add(q1.peek());
				q1.remove();
			}
			Queue<Integer> q = q1;
			q1 = q2;
			q2 = q;
		}

		static void pop()
		{
			if (q1.isEmpty())
				return;
			System.out.println(q1.remove())s;
		}

		static int top()
		{
			if (q1.isEmpty()){
				return -1;
			}
			return q1.peek();
		}

		static int size(){
			return q1.size();
		}
	}
	public static void main(String[] args)
	{
		Stack s = new Stack();
		while(true){
			String choice = sc.next();
			if(choice.equals("push")){
				s.push(sc.nextInt());
			}
			else if(choice.equals("pop")){
				s.pop();
			}
			else if(choice.equals("size")){
				s.size();
			}
			else if(choice.equals("top")){
				s.top();
			}
			else{
				break;
			}
			System.out.prinltn("Current size is : " + s.size());
		}
	}
}
